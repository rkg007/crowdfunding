{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "Invalidstate",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "onlybuyer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "onlyseller",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ConfirmPurchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ConfirmReceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "abort",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "abortfornotreceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyer",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "payseller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum PurchaseAgreement.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "value",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"Invalidstate()": [
					{
						"notice": "The function annot be called at the current state."
					}
				],
				"onlybuyer()": [
					{
						"notice": "Only the buyer can call this function"
					}
				],
				"onlyseller()": [
					{
						"notice": "Only the seller can call this function"
					}
				]
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"safepurchase.sol": "PurchaseAgreement"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"safepurchase.sol": {
			"keccak256": "0xdadd7d94a12bc35196b07c294c694fc395de7840f93ad46646042d01d6b21fea",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://79b1374eed664867b87eaae9454d54ceff2a9c1305ead4acd10136e62a32ebef",
				"dweb:/ipfs/QmZWqEDmv8nsQvWWwUrjkHdXuxQh4C5GSp3NSdnLp22iix"
			]
		}
	},
	"version": 1
}